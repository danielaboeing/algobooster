
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'codeleftPLUSMINUSleftTIMESDIVIDEleftLPARENROUNDRPARENROUNDAND ASSIGN BY COMMA DIVIDE DO ELSE ENDFOR ENDIF ENDPROC EQ FOR GE GT IF IN INTDIVIDE LBRACE LE LPARENANG LPARENROUND LT MINUS MOD NAME NOT NOTEQ NUMBER OR PLUS POWER PROCEDURE RBRACE REPEAT RETURN RPARENANG RPARENROUND THEN TIMES TO UNTILcode : expr \n            | expr code expr : calcexpr\n            | condexpr\n            | loopexpr\n            | funcexpr\n            | returnexpr  calcexpr : var ASSIGN calc calc : LPARENROUND calc RPARENROUND\n            | calc op calc\n            | term op : PLUS \n            | MINUS \n            | TIMES \n            | DIVIDE \n            | INTDIVIDE \n            | MOD \n            | POWER var : NAME\n            | NAME LPARENANG NUMBER RPARENANG\n            | NAME LPARENANG NAME RPARENANG  term : scalar\n            | set\n            | seq  scalar : NUMBER\n                | funccall\n                | var  funccall : NAME LPARENROUND callparams RPARENROUND  callparams : calc\n                    | calc COMMA callparams set : LBRACE value RBRACE seq : LPARENANG value RPARENANG value : scalar COMMA value\n                | scalarcondexpr : IF cond THEN code ENDIF\n                | IF cond THEN code ELSE code ENDIFcond : LPARENROUND cond RPARENROUND\n            | NOT cond\n            | term\n            | cond log cond\n            | term comp term log : AND\n            | OR  comp : EQ\n            | NOTEQ\n            | GT\n            | GE\n            | LT\n            | LE\n            | IN\n            | NOT IN loopexpr : REPEAT code UNTIL cond\n                | FOR condfor DO code ENDFOR condfor : NAME IN set\n                | NAME IN NAME\n                | NAME IN scalar TO scalar BY scalar  funcexpr : PROCEDURE NAME LPARENROUND params RPARENROUND code ENDPROC returnexpr : RETURN\n                    | RETURN calc  params : NAME COMMA params\n                | NAME '
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,10,14,20,21,22,23,24,25,26,29,35,37,38,39,44,59,74,75,76,78,80,83,90,91,92,93,94,95,97,99,102,108,110,],[9,9,-3,-4,-5,-6,-7,9,-58,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,9,-38,9,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,9,-28,-53,9,-36,-57,]),'REPEAT':([0,2,3,4,5,6,7,10,14,20,21,22,23,24,25,26,29,35,37,38,39,44,59,74,75,76,78,80,83,90,91,92,93,94,95,97,99,102,108,110,],[10,10,-3,-4,-5,-6,-7,10,-58,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,10,-38,10,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,10,-28,-53,10,-36,-57,]),'FOR':([0,2,3,4,5,6,7,10,14,20,21,22,23,24,25,26,29,35,37,38,39,44,59,74,75,76,78,80,83,90,91,92,93,94,95,97,99,102,108,110,],[11,11,-3,-4,-5,-6,-7,11,-58,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,11,-38,11,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,11,-28,-53,11,-36,-57,]),'PROCEDURE':([0,2,3,4,5,6,7,10,14,20,21,22,23,24,25,26,29,35,37,38,39,44,59,74,75,76,78,80,83,90,91,92,93,94,95,97,99,102,108,110,],[12,12,-3,-4,-5,-6,-7,12,-58,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,12,-38,12,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,12,-28,-53,12,-36,-57,]),'RETURN':([0,2,3,4,5,6,7,10,14,20,21,22,23,24,25,26,29,35,37,38,39,44,59,74,75,76,78,80,83,90,91,92,93,94,95,97,99,102,108,110,],[14,14,-3,-4,-5,-6,-7,14,-58,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,14,-38,14,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,14,-28,-53,14,-36,-57,]),'NAME':([0,2,3,4,5,6,7,9,10,11,12,14,16,18,19,20,21,22,23,24,25,26,27,28,29,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,57,58,59,60,61,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,83,90,91,92,93,94,95,97,98,99,100,101,102,108,109,110,],[13,13,-3,-4,-5,-6,-7,29,13,32,33,29,29,29,29,-39,-22,-23,-24,-25,-26,-27,29,29,-19,62,-59,29,-11,-8,13,29,-42,-43,-38,29,-44,-45,-46,-47,-48,-49,-50,29,29,13,85,88,29,-12,-13,-14,-15,-16,-17,-18,-40,-37,-41,-51,-31,29,-32,-52,-21,-20,-10,-9,-35,13,-28,29,-53,29,88,13,-36,29,-57,]),'$end':([1,2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,35,37,38,44,74,75,76,78,80,83,90,91,92,93,94,97,99,108,110,],[0,-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,-38,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,-28,-53,-36,-57,]),'UNTIL':([2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,30,35,37,38,44,74,75,76,78,80,83,90,91,92,93,94,97,99,108,110,],[-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,58,-59,-11,-8,-38,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,-28,-53,-36,-57,]),'ENDIF':([2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,35,37,38,44,73,74,75,76,78,80,83,90,91,92,93,94,97,99,103,108,110,],[-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,-38,94,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,-28,-53,108,-36,-57,]),'ELSE':([2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,35,37,38,44,73,74,75,76,78,80,83,90,91,92,93,94,97,99,108,110,],[-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,-38,95,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,-28,-53,-36,-57,]),'ENDFOR':([2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,35,37,38,44,74,75,76,78,80,83,84,90,91,92,93,94,97,99,108,110,],[-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,-38,-40,-37,-41,-31,-32,-52,99,-21,-20,-10,-9,-35,-28,-53,-36,-57,]),'ENDPROC':([2,3,4,5,6,7,14,15,20,21,22,23,24,25,26,29,35,37,38,44,74,75,76,78,80,83,90,91,92,93,94,97,99,107,108,110,],[-1,-3,-4,-5,-6,-7,-58,-2,-39,-22,-23,-24,-25,-26,-27,-19,-59,-11,-8,-38,-40,-37,-41,-31,-32,-52,-21,-20,-10,-9,-35,-28,-53,110,-36,-57,]),'ASSIGN':([8,13,90,91,],[16,-19,-21,-20,]),'LPARENROUND':([9,14,16,18,19,29,33,36,40,41,42,57,58,64,65,66,67,68,69,70,71,85,98,],[18,36,36,18,18,57,61,36,18,-42,-43,36,18,36,-12,-13,-14,-15,-16,-17,-18,57,36,]),'NOT':([9,18,19,20,21,22,23,24,25,26,29,40,41,42,58,78,80,90,91,97,],[19,19,19,53,-22,-23,-24,-25,-26,-27,-19,19,-42,-43,19,-31,-32,-21,-20,-28,]),'NUMBER':([9,14,16,18,19,27,28,34,36,40,41,42,45,46,47,48,49,50,51,52,57,58,60,64,65,66,67,68,69,70,71,77,79,98,100,109,],[24,24,24,24,24,24,24,63,24,24,-42,-43,24,-44,-45,-46,-47,-48,-49,-50,24,24,24,24,-12,-13,-14,-15,-16,-17,-18,-51,24,24,24,24,]),'LBRACE':([9,14,16,18,19,36,40,41,42,45,46,47,48,49,50,51,52,57,58,60,64,65,66,67,68,69,70,71,77,98,],[27,27,27,27,27,27,27,-42,-43,27,-44,-45,-46,-47,-48,-49,-50,27,27,27,27,-12,-13,-14,-15,-16,-17,-18,-51,27,]),'LPARENANG':([9,13,14,16,18,19,29,36,40,41,42,45,46,47,48,49,50,51,52,57,58,64,65,66,67,68,69,70,71,77,85,98,],[28,34,28,28,28,28,34,28,28,-42,-43,28,-44,-45,-46,-47,-48,-49,-50,28,28,28,-12,-13,-14,-15,-16,-17,-18,-51,34,28,]),'THEN':([17,20,21,22,23,24,25,26,29,44,74,75,76,78,80,90,91,97,],[39,-39,-22,-23,-24,-25,-26,-27,-19,-38,-40,-37,-41,-31,-32,-21,-20,-28,]),'AND':([17,20,21,22,23,24,25,26,29,43,44,74,75,76,78,80,83,90,91,97,],[41,-39,-22,-23,-24,-25,-26,-27,-19,41,41,41,-37,-41,-31,-32,41,-21,-20,-28,]),'OR':([17,20,21,22,23,24,25,26,29,43,44,74,75,76,78,80,83,90,91,97,],[42,-39,-22,-23,-24,-25,-26,-27,-19,42,42,42,-37,-41,-31,-32,42,-21,-20,-28,]),'RPARENROUND':([20,21,22,23,24,25,26,29,37,43,44,72,74,75,76,78,80,81,82,88,89,90,91,92,93,97,104,106,],[-39,-22,-23,-24,-25,-26,-27,-19,-11,75,-38,93,-40,-37,-41,-31,-32,97,-29,-61,102,-21,-20,-10,-9,-28,-30,-60,]),'EQ':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[46,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'NOTEQ':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[47,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'GT':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[48,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'GE':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[49,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'LT':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[50,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'LE':([20,21,22,23,24,25,26,29,78,80,90,91,97,],[51,-22,-23,-24,-25,-26,-27,-19,-31,-32,-21,-20,-28,]),'IN':([20,21,22,23,24,25,26,29,32,53,78,80,90,91,97,],[52,-22,-23,-24,-25,-26,-27,-19,60,77,-31,-32,-21,-20,-28,]),'PLUS':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,65,-11,65,65,-31,-32,65,-21,-20,65,-9,-28,]),'MINUS':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,66,-11,66,66,-31,-32,66,-21,-20,66,-9,-28,]),'TIMES':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,67,-11,67,67,-31,-32,67,-21,-20,67,-9,-28,]),'DIVIDE':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,68,-11,68,68,-31,-32,68,-21,-20,68,-9,-28,]),'INTDIVIDE':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,69,-11,69,69,-31,-32,69,-21,-20,69,-9,-28,]),'MOD':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,70,-11,70,70,-31,-32,70,-21,-20,70,-9,-28,]),'POWER':([21,22,23,24,25,26,29,35,37,38,72,78,80,82,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,71,-11,71,71,-31,-32,71,-21,-20,71,-9,-28,]),'COMMA':([21,22,23,24,25,26,29,37,55,78,80,82,88,90,91,92,93,97,],[-22,-23,-24,-25,-26,-27,-19,-11,79,-31,-32,98,101,-21,-20,-10,-9,-28,]),'RBRACE':([24,25,26,29,54,55,90,91,96,97,],[-25,-26,-27,-19,78,-34,-21,-20,-33,-28,]),'RPARENANG':([24,25,26,29,55,56,62,63,90,91,96,97,],[-25,-26,-27,-19,-34,80,90,91,-21,-20,-33,-28,]),'TO':([24,25,26,85,87,90,91,97,],[-25,-26,-27,-19,100,-21,-20,-28,]),'BY':([24,25,26,29,90,91,97,105,],[-25,-26,-27,-19,-21,-20,-28,109,]),'DO':([24,25,26,29,31,78,85,86,90,91,97,111,],[-25,-26,-27,-19,59,-31,-55,-54,-21,-20,-28,-56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,2,10,39,59,95,102,],[1,15,30,73,84,103,107,]),'expr':([0,2,10,39,59,95,102,],[2,2,2,2,2,2,2,]),'calcexpr':([0,2,10,39,59,95,102,],[3,3,3,3,3,3,3,]),'condexpr':([0,2,10,39,59,95,102,],[4,4,4,4,4,4,4,]),'loopexpr':([0,2,10,39,59,95,102,],[5,5,5,5,5,5,5,]),'funcexpr':([0,2,10,39,59,95,102,],[6,6,6,6,6,6,6,]),'returnexpr':([0,2,10,39,59,95,102,],[7,7,7,7,7,7,7,]),'var':([0,2,9,10,14,16,18,19,27,28,36,39,40,45,57,58,59,60,64,79,95,98,100,102,109,],[8,8,26,8,26,26,26,26,26,26,26,8,26,26,26,26,8,26,26,26,8,26,26,8,26,]),'cond':([9,18,19,40,58,],[17,43,44,74,83,]),'term':([9,14,16,18,19,36,40,45,57,58,64,98,],[20,37,37,20,20,37,20,76,37,20,37,37,]),'scalar':([9,14,16,18,19,27,28,36,40,45,57,58,60,64,79,98,100,109,],[21,21,21,21,21,55,55,21,21,21,21,21,87,21,55,21,105,111,]),'set':([9,14,16,18,19,36,40,45,57,58,60,64,98,],[22,22,22,22,22,22,22,22,22,22,86,22,22,]),'seq':([9,14,16,18,19,36,40,45,57,58,64,98,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'funccall':([9,14,16,18,19,27,28,36,40,45,57,58,60,64,79,98,100,109,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'condfor':([11,],[31,]),'calc':([14,16,36,57,64,98,],[35,38,72,82,92,82,]),'log':([17,43,44,74,83,],[40,40,40,40,40,]),'comp':([20,],[45,]),'value':([27,28,79,],[54,56,96,]),'op':([35,38,72,82,92,],[64,64,64,64,64,]),'callparams':([57,98,],[81,104,]),'params':([61,101,],[89,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> expr','code',1,'p_code','ps2py_yacc.py',18),
  ('code -> expr code','code',2,'p_code','ps2py_yacc.py',19),
  ('expr -> calcexpr','expr',1,'p_expr','ps2py_yacc.py',26),
  ('expr -> condexpr','expr',1,'p_expr','ps2py_yacc.py',27),
  ('expr -> loopexpr','expr',1,'p_expr','ps2py_yacc.py',28),
  ('expr -> funcexpr','expr',1,'p_expr','ps2py_yacc.py',29),
  ('expr -> returnexpr','expr',1,'p_expr','ps2py_yacc.py',30),
  ('calcexpr -> var ASSIGN calc','calcexpr',3,'p_calcexpr','ps2py_yacc.py',37),
  ('calc -> LPARENROUND calc RPARENROUND','calc',3,'p_calc','ps2py_yacc.py',41),
  ('calc -> calc op calc','calc',3,'p_calc','ps2py_yacc.py',42),
  ('calc -> term','calc',1,'p_calc','ps2py_yacc.py',43),
  ('op -> PLUS','op',1,'p_op','ps2py_yacc.py',53),
  ('op -> MINUS','op',1,'p_op','ps2py_yacc.py',54),
  ('op -> TIMES','op',1,'p_op','ps2py_yacc.py',55),
  ('op -> DIVIDE','op',1,'p_op','ps2py_yacc.py',56),
  ('op -> INTDIVIDE','op',1,'p_op','ps2py_yacc.py',57),
  ('op -> MOD','op',1,'p_op','ps2py_yacc.py',58),
  ('op -> POWER','op',1,'p_op','ps2py_yacc.py',59),
  ('var -> NAME','var',1,'p_var','ps2py_yacc.py',69),
  ('var -> NAME LPARENANG NUMBER RPARENANG','var',4,'p_var','ps2py_yacc.py',70),
  ('var -> NAME LPARENANG NAME RPARENANG','var',4,'p_var','ps2py_yacc.py',71),
  ('term -> scalar','term',1,'p_term','ps2py_yacc.py',79),
  ('term -> set','term',1,'p_term','ps2py_yacc.py',80),
  ('term -> seq','term',1,'p_term','ps2py_yacc.py',81),
  ('scalar -> NUMBER','scalar',1,'p_scalar','ps2py_yacc.py',85),
  ('scalar -> funccall','scalar',1,'p_scalar','ps2py_yacc.py',86),
  ('scalar -> var','scalar',1,'p_scalar','ps2py_yacc.py',87),
  ('funccall -> NAME LPARENROUND callparams RPARENROUND','funccall',4,'p_funccall','ps2py_yacc.py',91),
  ('callparams -> calc','callparams',1,'p_callparams','ps2py_yacc.py',95),
  ('callparams -> calc COMMA callparams','callparams',3,'p_callparams','ps2py_yacc.py',96),
  ('set -> LBRACE value RBRACE','set',3,'p_set','ps2py_yacc.py',104),
  ('seq -> LPARENANG value RPARENANG','seq',3,'p_seq','ps2py_yacc.py',108),
  ('value -> scalar COMMA value','value',3,'p_value','ps2py_yacc.py',112),
  ('value -> scalar','value',1,'p_value','ps2py_yacc.py',113),
  ('condexpr -> IF cond THEN code ENDIF','condexpr',5,'p_condexpr','ps2py_yacc.py',122),
  ('condexpr -> IF cond THEN code ELSE code ENDIF','condexpr',7,'p_condexpr','ps2py_yacc.py',123),
  ('cond -> LPARENROUND cond RPARENROUND','cond',3,'p_cond','ps2py_yacc.py',132),
  ('cond -> NOT cond','cond',2,'p_cond','ps2py_yacc.py',133),
  ('cond -> term','cond',1,'p_cond','ps2py_yacc.py',134),
  ('cond -> cond log cond','cond',3,'p_cond','ps2py_yacc.py',135),
  ('cond -> term comp term','cond',3,'p_cond','ps2py_yacc.py',136),
  ('log -> AND','log',1,'p_log','ps2py_yacc.py',148),
  ('log -> OR','log',1,'p_log','ps2py_yacc.py',149),
  ('comp -> EQ','comp',1,'p_comp','ps2py_yacc.py',153),
  ('comp -> NOTEQ','comp',1,'p_comp','ps2py_yacc.py',154),
  ('comp -> GT','comp',1,'p_comp','ps2py_yacc.py',155),
  ('comp -> GE','comp',1,'p_comp','ps2py_yacc.py',156),
  ('comp -> LT','comp',1,'p_comp','ps2py_yacc.py',157),
  ('comp -> LE','comp',1,'p_comp','ps2py_yacc.py',158),
  ('comp -> IN','comp',1,'p_comp','ps2py_yacc.py',159),
  ('comp -> NOT IN','comp',2,'p_comp','ps2py_yacc.py',160),
  ('loopexpr -> REPEAT code UNTIL cond','loopexpr',4,'p_loopexpr','ps2py_yacc.py',167),
  ('loopexpr -> FOR condfor DO code ENDFOR','loopexpr',5,'p_loopexpr','ps2py_yacc.py',168),
  ('condfor -> NAME IN set','condfor',3,'p_condfor','ps2py_yacc.py',175),
  ('condfor -> NAME IN NAME','condfor',3,'p_condfor','ps2py_yacc.py',176),
  ('condfor -> NAME IN scalar TO scalar BY scalar','condfor',7,'p_condfor','ps2py_yacc.py',177),
  ('funcexpr -> PROCEDURE NAME LPARENROUND params RPARENROUND code ENDPROC','funcexpr',7,'p_funcexpr','ps2py_yacc.py',187),
  ('returnexpr -> RETURN','returnexpr',1,'p_returnexpr','ps2py_yacc.py',191),
  ('returnexpr -> RETURN calc','returnexpr',2,'p_returnexpr','ps2py_yacc.py',192),
  ('params -> NAME COMMA params','params',3,'p_params','ps2py_yacc.py',199),
  ('params -> NAME','params',1,'p_params','ps2py_yacc.py',200),
]
